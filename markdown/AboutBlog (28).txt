AboutBlog
==

PURPOSE: 記錄部落格的文章結構與設計原因
--

[TOC]

[TOC] is dead.

* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
# BLOG 編輯環境

使用 StackEdit 編輯器與 Markdown 語言做為部落格編寫環境。

StackEdit 
作為 Markdown 語言的編輯器，有**所見即所得**的功能。
可以將**文件發佈**至 Blogger / Github 等常見平台，修改文章後也可以直接上傳更新。
並且把**文件同步儲存**在 Dropbox / Google Drive 空間中，可以在不同電腦編輯。

StackEdit 優點:
1. 所見即所得
2. 一鍵發布
3. 自動備份

StackEdit 缺點:
1. 部落格內容不跟隨更新時間，Blogger 標籤會被洗掉。
2. 文章同步時，千萬不要切換至其他文章，有機會內容會被完全覆蓋，並且無法從備份中救回，因為備份也同時被覆寫。

**解決辦法**

自行開發

 1. 個人網站 
 2. 文件存放有版本控制功能
 3. 良好的編輯語言與編輯平台

<br / >

* ~~直接把 github 當作發表平台，輸出格式為 md。
 自己開發後端程式自動化文件中的一些內容修改。~~
 
* NOW 
  展示 - 利用 CSS 修改 Blogger 設定。
  編輯 - 利用 StackEdit 編寫 Mardown 的部落格文章。
 
* FURTHER
  個人網站
  
  檔案存在 GitHub 專案中作為版本控制系統。
  透過 AWS、PythonAnyWhere 展示個人網站。
  要易於編寫與隨時更新上傳。
  
  不僅僅作為展示，需要開發一個良好的設計流程，
  達到系統最初的目的 (幫助夢想進行)，即易於編寫上傳，
  流暢的修改操作與學習。達到修改系統的同時加速學習。


# 目的

目的是達到系統化的學習、記錄細節和製作實用的檢查清單。

 1. 利用編輯文章的習慣成為學習的動力，並且有效的培養每日工作習慣。
 2. 人腦對於記憶效果非常的差，因此把學習後的內容存在電腦裡藉由一層一層的檢查清單，幫助人腦使用已經學過的知識。需要記憶的內容存在電腦裡，使用知識的時候只要瀏覽檢查清單喚醒 ( arouse ) 內容就好。

藉由重複更新和編寫系統化的文章，達到類似於編寫程式的創作流程，來自於 Test-Driven Development (TDD) 中的流程不斷的重構。

儲存細節 :  

* Detail

方便使用的檢查清單 :

* List Subject  單一主題使用的檢查清單
* List 總體檢查清單

學習動力 (power) 推動工作執行 :

 1. Daily Work
 2. Working Part
 3. Learning Path **排序很重要，但是執行可以並行**

動力流程 :
1. 查看 Daily Work 並且去完成 Daily Work。 (短)
2. 查看 Working Part，持續執行有興趣的部份。 (中長)
3. 查看 Learning Path，更清楚目標。 (長遠)
 
#文章類型
 
文章類型分為:

* Checklist 3層結構:
檢查清單需要紀錄的是 **concepts** 而不是目錄，重點在於實用而不是清單，需要整理出來的是可以**把玩的概念集**。

1. 只列出名稱 利用縮排展示類別與各項檢查清單，文章標題為: List 。

2. 單一主題與各檢查清單包含簡單的描述，主要內容為可以作為檢查清單使用的關鍵詞 （keywords），文章標題為: List "Name" 。

3. 細節與問答集，文章標題為: Detail "Name" 。
    detail 紀錄重點和使用細節與問答集

* Daily Work:  **初始**動力
每日工作 ( Routine )，每日工作內容需花越少時間完成越好，
目的是避免厭倦，只是幫助進入工作情境。
同時可以加入簡單的工作規劃 to-do list。

* Working Part:  類似於**中長期**的代辦事項 (執行中)
正在進行的工作紀錄，結束後會整合回 List 三層結構，並結束 Working Part 標題。
Working Part 整合進 list 結構
List
List Subject
Detail 
Next Working Part 

* Interesting :  與專業無關、有興趣、能帶來娛樂的領域，紀錄路程，用來提醒自己哪些事情是有趣的。

* Learning Path : **長期**的目標清單，包含所有有興趣的目標，並且**排序**與紀錄執行情況。**目前缺乏實際目標的描述，具體，重要性與排序**

* Questions:
問題集，把任何疑問整理在同一份文件裡，藉由意圖解決問題成為系統動力的一部分。
 
* Ideas
 紀錄突發奇想的靈感，慢慢的整合到系統內部並且刪除。

部落格使用的符號:
( 次數 ) : 每次有任何修改重構，皆會增加次數，單位為 "天" 。

****

#Questions

* 什麼是把知識學得踏實? 是知識能解決問題? 學到什麼樣的程度? 

* 如何累積知識並且可以充分活用所學過的知識 ?

* 人類知識的全貌? 學科?

* 人類社會的分類與所需? 社會學?

* 尋找閱讀與紀錄的程序，個人學習方法的演進
 Ans: Working Part 個人學習方法

* 如何把 Ideas 文件中的 Inspiration 和 to-do list 整合到系統中？系統中需要地方承載更多的個人心得與靈感
 Ans:
 1. 分別存放於 ideas 與 to-do list 並且重複瀏覽與思考後整合進系統中在刪除。
 2. 不同類型的個人心得都新開 Working Part 去紀錄與思考
<!--stackedit_data:
eyJoaXN0b3J5IjpbMjAwNjM4MDgxOV19
-->